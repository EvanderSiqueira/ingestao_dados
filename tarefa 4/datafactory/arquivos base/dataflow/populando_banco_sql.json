{
	"name": "populando_banco_sql",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "fato_tarifas",
						"type": "DatasetReference"
					},
					"name": "fatoTarifas"
				},
				{
					"dataset": {
						"referenceName": "dimCalendario",
						"type": "DatasetReference"
					},
					"name": "dimCalendario"
				},
				{
					"dataset": {
						"referenceName": "dimInstituicoes",
						"type": "DatasetReference"
					},
					"name": "dimInstituicoes"
				},
				{
					"dataset": {
						"referenceName": "fatoReclamacoes",
						"type": "DatasetReference"
					},
					"name": "fatoReclamacoes"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "salvarTarifasSQL"
				},
				{
					"dataset": {
						"referenceName": "dimCalendar",
						"type": "DatasetReference"
					},
					"name": "salvarCalendarioSQL"
				},
				{
					"dataset": {
						"referenceName": "dim_instituicoes",
						"type": "DatasetReference"
					},
					"name": "salvarInstituicoesSQL"
				},
				{
					"dataset": {
						"referenceName": "fato_reclamacoes",
						"type": "DatasetReference"
					},
					"name": "salvarReclamacoesSQL"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          pk_tarifa as short,",
				"          fk_calendario as short,",
				"          fk_cnpj as integer,",
				"          descr_tarifa as string,",
				"          tipo_tarifa as string,",
				"          data_vigencia as date 'yyyy-MM-dd',",
				"          valor_maximo as double,",
				"          tipo_valor as string,",
				"          periodicidade as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> fatoTarifas",
				"source(output(",
				"          pk_calendario as short,",
				"          ano as short,",
				"          trimestre as short,",
				"          trimestre_descr_curta as string,",
				"          trimestre_descr_longa as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> dimCalendario",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> dimInstituicoes",
				"source(output(",
				"          fk_cnpj as integer,",
				"          fk_calendario as short,",
				"          quantidade_reclamacoes_reguladas_procedentes as short,",
				"          quantidade_reclamacoes_reguladas_outras as short,",
				"          quantidade_reclamacoes_nao_reguladas as short,",
				"          quantidade_total_reclamacoes as short,",
				"          quantidade_total_clientes_ccs_e_scr as integer,",
				"          quantidade_clientes_ccs as double,",
				"          quantidade_clientes_scr as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> fatoReclamacoes",
				"fatoTarifas sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> salvarTarifasSQL",
				"dimCalendario sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> salvarCalendarioSQL",
				"dimInstituicoes sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> salvarInstituicoesSQL",
				"fatoReclamacoes sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> salvarReclamacoesSQL"
			]
		}
	}
}